{"version":3,"file":"static/js/536.a6e7119c.chunk.js","mappings":"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","sources":["components/NavBar/styled.ts","components/NavBar/NavBar.tsx","utils/index.ts"],"sourcesContent":["import styled, { createGlobalStyle, css } from 'styled-components'\r\nimport bgImg from '@/static/head-bg.png'\r\nimport BtnLeft from '@/static/btn-left.png'\r\nimport BtnRight from '@/static/btn-right.png'\r\n\r\nexport const TopNav = styled.div`\r\n  width: 100%;\r\n  padding: 11px 16px 18px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-image: url(${bgImg});\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  .linkWallet {\r\n    padding: 5px 12px;\r\n    border: none;\r\n    height: 32px;\r\n    background: #ffffff;\r\n    border-radius: 4px 4px 4px 4px;\r\n    font-size: 14px;\r\n    font-family: Source Han Sans CN-Regular, Source Han Sans CN;\r\n    font-weight: 400;\r\n    color: #10b85d;\r\n    line-height: 16px;\r\n  }\r\n  .languageBtn {\r\n    border: none;\r\n    height: 28px;\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-family: Source Han Sans CN-Regular, Source Han Sans CN;\r\n    color: #387857;\r\n    span {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 2px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ButtonNav = styled.button`\r\n  padding: 7px 12px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #0e360f;\r\n  line-height: 14px;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  &.left {\r\n    background-image: url(${BtnLeft});\r\n  }\r\n  &.right {\r\n    padding: 7px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-image: url(${BtnRight});\r\n  }\r\n`\r\n\r\nexport const LanguageContent = styled.div`\r\n  display: grid;\r\n  div {\r\n    padding: 16px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    color: #939393;\r\n    &.active {\r\n      font-size: 15px;\r\n      color: #000;\r\n    }\r\n  }\r\n`\r\nexport const BackNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  .backImg {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  .title {\r\n    flex: auto;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: #ffffff;\r\n    line-height: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n","import mainStore from '@/store'\r\nimport { Popup, Toast } from 'antd-mobile'\r\nimport React, { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { LanguageContent, TopNav, ButtonNav, BackNav } from './styled'\r\nimport { changeNetwork } from '@/web3'\r\nimport { DownOutline } from 'antd-mobile-icons'\r\nimport { formatStrAddress } from '@/utils'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\ninterface Props {\r\n  isHome?: boolean\r\n  title?: string | null\r\n  url?: string | null\r\n}\r\nconst NavBar: React.FC<Props> = ({ isHome = false, url, title }) => {\r\n  const { i18n, t } = useTranslation()\r\n  const { address } = mainStore()\r\n  const CHAINID = Number(process.env.REACT_APP_CHAIN_ID)\r\n  const [visible, setVisible] = useState<boolean>(false)\r\n  const navigate = useNavigate()\r\n\r\n  const linkWallet = () => {\r\n    /**\r\n     * @method 链接钱包\r\n     */\r\n    if (address) {\r\n      const textarea = document.createElement('textarea')\r\n      textarea.value = address\r\n      document.body.appendChild(textarea)\r\n      textarea.select()\r\n      document.execCommand('copy')\r\n      document.body.removeChild(textarea)\r\n      Toast.show({\r\n        content: t('copySuccess'),\r\n      })\r\n    } else {\r\n      changeNetwork(CHAINID)\r\n    }\r\n  }\r\n\r\n  function changeLocal(val: string) {\r\n    setVisible(false)\r\n    if (i18n.language == val) return\r\n    i18n.changeLanguage(val)\r\n    localStorage.setItem('locale', val)\r\n  }\r\n\r\n  function toPage() {\r\n    if (url) {\r\n      navigate(url)\r\n    } else {\r\n      navigate(-1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Popup\r\n        closeOnMaskClick\r\n        bodyStyle={{\r\n          borderRadius: '18px 18px 0 0',\r\n        }}\r\n        visible={visible}\r\n        onMaskClick={() => {\r\n          setVisible(false)\r\n        }}\r\n        onClose={() => {\r\n          setVisible(false)\r\n        }}\r\n      >\r\n        <LanguageContent>\r\n          <div>\r\n            <div\r\n              className={`language-item ${i18n.language === 'zh' ? 'active' : ''}`}\r\n              onClick={() => changeLocal('zh')}\r\n            >\r\n              简体中文\r\n            </div>\r\n            <div\r\n              className={`language-item ${i18n.language === 'en' ? 'active' : ''}`}\r\n              onClick={() => changeLocal('en')}\r\n            >\r\n              English\r\n            </div>\r\n          </div>\r\n        </LanguageContent>\r\n      </Popup>\r\n      <TopNav>\r\n        {isHome ? (\r\n          <React.Fragment>\r\n            <ButtonNav className='left' onClick={linkWallet}>\r\n              {address ? formatStrAddress(4, 4, address) : t('linkWallet')}\r\n            </ButtonNav>\r\n            <ButtonNav className='right' onClick={() => setVisible(true)}>\r\n              {i18n.language == 'en' ? 'English' : '简体中文'}\r\n              <DownOutline fontSize={10} color='#387857' />\r\n            </ButtonNav>\r\n          </React.Fragment>\r\n        ) : (\r\n          <BackNav>\r\n            <div>\r\n              <img onClick={toPage} className='backImg' src={require('@/static/back-icon.png')} />\r\n            </div>\r\n            <div className='title'>{title}</div>\r\n            <div></div>\r\n          </BackNav>\r\n        )}\r\n      </TopNav>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import TextOmit from './textOmit'\r\nimport getQueryString from './getQueryString'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n/** address 截取. */\r\nexport const formatStrAddress = (a: number, b: number, str: string) => {\r\n  return str.substring(0, a) + new Array(4).join('.') + str.substring(str.length - b, str.length)\r\n}\r\n\r\n// 小数位数解析（不四舍五入）\r\nexport const decimal = (num: any, digit: number) => {\r\n  const temp = Math.pow(10, digit)\r\n  return Math.floor(Number(num) * temp) / temp\r\n}\r\n\r\nexport { TextOmit, getQueryString }\r\n"],"names":["TopNav","styled","div","_templateObject","_taggedTemplateLiteral","bgImg","ButtonNav","button","_templateObject2","LanguageContent","_templateObject3","BackNav","_templateObject4","_ref","_ref$isHome","isHome","url","title","_useTranslation","useTranslation","i18n","t","address","mainStore","CHAINID","Number","process","_useState","useState","_useState2","_slicedToArray","visible","setVisible","navigate","useNavigate","changeLocal","val","language","changeLanguage","localStorage","setItem","_jsxs","React","children","_jsx","Popup","closeOnMaskClick","bodyStyle","borderRadius","onMaskClick","onClose","className","concat","onClick","textarea","document","createElement","value","body","appendChild","select","execCommand","removeChild","Toast","show","content","changeNetwork","formatStrAddress","DownOutline","fontSize","color","src","require","a","b","str","substring","Array","join","length","decimal","num","digit","temp","Math","pow","floor"],"sourceRoot":""}
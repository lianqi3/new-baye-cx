{"version":3,"file":"static/js/353.c1c5eaf7.chunk.js","mappings":"2JAiCA,UA/BA,SAAwBA,GAA+B,IAADC,EAAAD,EAA3BE,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAC3CE,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAsBtC,OApBAI,EAAAA,EAAAA,YAAU,WACR,IAEMC,EAAYR,EADJ,IAGVS,EAAc,EAEZC,EAAWC,aAAY,WACvBF,EANQ,KAOVH,GAAiB,SAACM,GAAU,OAAKA,EAAaJ,CAAS,IACvDC,MAEAH,EAAiBN,GACjBa,cAAcH,GAElB,GAAGI,IAEH,OAAO,kBAAMD,cAAcH,EAAS,CACtC,GAAG,CAACV,KAGFe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,MAAO,QAASH,SAAEI,KAAKC,MAAMhB,OAG/C,C","sources":["views/Test/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction NumberAnimation({ targetNumber = 500 }: any) {\r\n  const [currentNumber, setCurrentNumber] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const animationDuration = 1000 // 动画持续时间（毫秒）\r\n    const steps = 100 // 动画步数\r\n    const stepValue = targetNumber / steps\r\n\r\n    let currentStep = 0\r\n\r\n    const interval = setInterval(() => {\r\n      if (currentStep < steps) {\r\n        setCurrentNumber((prevNumber) => prevNumber + stepValue)\r\n        currentStep++\r\n      } else {\r\n        setCurrentNumber(targetNumber)\r\n        clearInterval(interval)\r\n      }\r\n    }, animationDuration / steps)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [targetNumber])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Number Animation</h1>\r\n      <p style={{ color: '#fff' }}>{Math.round(currentNumber)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberAnimation\r\n"],"names":["_ref","_ref$targetNumber","targetNumber","_useState","useState","_useState2","_slicedToArray","currentNumber","setCurrentNumber","useEffect","stepValue","currentStep","interval","setInterval","prevNumber","clearInterval","animationDuration","_jsxs","children","_jsx","style","color","Math","round"],"sourceRoot":""}